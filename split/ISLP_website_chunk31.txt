ing a cubic term in the regression does not lead to better prediction
than simply using a quadratic term.
Recall that in order to create the left-hand panel of Figure 5.2, we randomly divided the data set into two parts, a training set and a validation
set. If we repeat the process of randomly splitting the sample set into two
parts, we will get a somewhat different estimate for the test MSE. As an
illustration, the right-hand panel of Figure 5.2 displays ten different validation set MSE curves from the Auto data set, produced using ten different
random splits of the observations into training and validation sets. All ten
curves indicate that the model with a quadratic term has a dramatically
smaller validation set MSE than the model with only a linear term. Furthermore, all ten curves indicate that there is not much benefit in including
cubic or higher-order polynomial terms in the model. But it is worth noting
that each of the ten curves results in a different test MSE estimate for each
of the ten regression models considered. And there is no consensus among
the curves as to which model results in the smallest validation set MSE.
Based on the variability among these curves, all that we can conclude with
any confidence is that the linear fit is not adequate for this data.
The validation set approach is conceptually simple and is easy to implement. But it has two potential drawbacks:
1. As is shown in the right-hand panel of Figure 5.2, the validation estimate of the test error rate can be highly variable, depending on precisely which observations are included in the training set and which
observations are included in the validation set.
2. In the validation approach, only a subset of the observations—those
that are included in the training set rather than in the validation
set—are used to fit the model. Since statistical methods tend to perform worse when trained on fewer observations, this suggests that the

26
24
22
20
16

18

Mean Squared Error

26
24
22
20
18
16

Mean Squared Error

28

5. Resampling Methods

28

204

2

4

6

8

10

Degree of Polynomial

2

4

6

8

10

Degree of Polynomial

FIGURE 5.2. The validation set approach was used on the Auto data set in
order to estimate the test error that results from predicting mpg using polynomial
functions of horsepower. Left: Validation error estimates for a single split into
training and validation data sets. Right: The validation method was repeated ten
times, each time using a different random split of the observations into a training
set and a validation set. This illustrates the variability in the estimated test MSE
that results from this approach.

validation set error rate may tend to overestimate the test error rate
for the model fit on the entire data set.
In the coming subsections, we will present cross-validation, a refinement of
the validation set approach that addresses these two issues.

5.1.2

Leave-One-Out Cross-Validation

Leave-one-out cross-validation (LOOCV) is closely related to the validation
leave-oneset approach of Section 5.1.1, but it attempts to address that method’s out
drawbacks.
crossLike the validation set approach, LOOCV involves splitting the set of validation
observations into two parts. However, instead of creating two subsets of
comparable size, a single observation (x1 , y1 ) is used for the validation
set, and the remaining observations {(x2 , y2 ), . . . , (xn , yn )} make up the
training set. The statistical learning method is fit on the n − 1 training
observations, and a prediction ŷ1 is made for the excluded observation,
using its value x1 . Since (x1 , y1 ) was not used in the fitting process, MSE1 =
(y1 − ŷ1 )2 provides an approximately unbiased estimate for the test error.
But even though MSE1 is unbiased for the test error, it is a poor estimate
because it is highly variable, since it is based upon a single observation
(x1 , y1 ).
We can repeat the procedure by selecting (x2 , y2 ) for the validation
data, training the statistical learning procedure on the n − 1 observations
{(x1 , y1 ), (x3 , y3 ), . . . , (xn , yn )}, and computing MSE2 = (y2 −ŷ2 )2 . Repeating this approach n times produces n squared errors, MSE1 , . . . , MSEn .
The LOOCV estimate for the test MSE is the average of these n test error
estimates:
n
10
CV(n) =
MSEi .
(5.1)
n i=1

5.1 Cross-Validation

205

!"#"$"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""%"

!"#"$"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""%"
!"#"$"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""%"
!"#"$"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""%"
&"
&"
&"
!"#"$"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""%"

FIGURE 5.3. A schematic display of LOOCV. A set of n data points is repeatedly split into a training set (shown in blue) containing all but one observation,
and a validation set that contains only that observation (shown in beige). The test
error is then estimated by averaging the n resulting MSEs. The first training set
contains all but observation 1, the second training set contains all but observation
2, and so forth.

A schematic of the LOOCV approach is illustrated in Figure 5.3.
LOOCV has a couple of major advantages over the validation set approach. First, it has far less bias. In LOOCV, we repeatedly fit the statistical learning method using training sets that contain n − 1 observations, almost as many as are in the entire data set. This is in contrast to
the validation set approach, in which the training set is typically around
half the size of the original data set. Consequently, the LOOCV approach
tends not to overestimate the test error rate as much as the validation
set approach does. Second, in contrast to the validation approach which
will yield different results when applied repeatedly due to randomness in
the training/validation set splits, performing LOOCV multiple times will
always yield the same results: there is no randomness in the training/validation set splits.
We used LOOCV on the Auto data set in order to obtain an estimate
of the test set MSE that results from fitting a linear regression model to
predict mpg using polynomial functions of horsepower. The results are shown
in the left-hand panel of Figure 5.4.
LOOCV has the potential to be expensive to implement, since the model
has to be fit n times. This can be very time consuming if n is large, and if
each individual model is slow to fit. With least squares linear or polynomial
regression, an amazing shortcut makes the cost of LOOCV the same as that
of a single model fit! The following formula holds:

n

10
CV(n) =
n i=1

*

yi − ŷi
1 − hi

+2

,

(5.2)

206

5. Resampling Methods

26
24
22
20
16

18

Mean Squared Error

26
24
22
20
18
16

Mean Squared Error

28

10−fold CV

28

LOOCV

2

4

6

8

10

Degree of Polynomial

2

4

6

8

10

Degree of Polynomial

FIGURE 5.4. Cross-validation was used on the Auto data set in order to
estimate the test error that results from predicting mpg using polynomial functions
of horsepower. Left: The LOOCV error curve. Right: 10-fold CV was run nine
separate times, each with a different random split of the data into ten parts. The
figure shows the nine slightly different CV error curves.

where ŷi is the ith fitted value from the original least squares fit, and hi is
the leverage defined in (3.37) on page 105.1 This is like the ordinary MSE,
except the ith residual is divided by 1 − hi . The leverage lies between 1/n
and 1, and reflects the amount that an observation influences its own fit.
Hence the residuals for high-leverage points are inflated in this formula by
exactly the right amount for this equality to hold.
LOOCV is a very general method, and can be used with any kind of
predictive modeling. For example we could use it with logistic regression
or linear discriminant analysis, or any of the methods discussed in later
chapters. The magic formula (5.2) does not hold in general, in which case
the model has to be refit n times.

5.1.3

k-Fold Cross-Validation

An alternative to LOOCV is k-fold CV. This approach involves randomly
k-fold CV
dividing the set of observations into k groups, or folds, of approximately
equal size. The first fold is treated as a validation set, and the method
is fit on the remaining k − 1 folds. The mean squared error, MSE1 , is
then computed on the observations in the held-out fold. This procedure is
repeated k times; each time, a different group of observations is treated
as a validation set. This process results in k estimates of the test error,
MSE1 , MSE2 , . . . , MSEk . The k-fold CV estimate is computed by averaging
these values,
k
10
CV(k) =
MSEi .
(5.3)
k i=1

Figure 5.5 illustrates the k-fold CV approach.

1 In the case of multiple linear regression, the leverage takes a slightly more complicated form than (3.37), but (5.2) still holds.

5.1 Cross-Validation

207

!"#"$""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""%"

!!"&'"(""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""")&"
!!"&'"(""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""")&"
!!"&'"(""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""")&"
!!"&'"(""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""")&"
!!"&'"(""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""")&"

FIGURE 5.5. A schematic display of 5-fold CV. A set of n observations is
randomly split into five non-overlapping groups. Each of these fifths acts as a
validation set (shown in beige), and the remainder as a training set (shown in
blue). The test error is estimated by averaging the five resulting MSE estimates.

It is not hard to see that LOOCV is a special case of k-fold CV in which k
is set to equal n. In practice, one typically performs k-fold CV using k = 5
or k = 10. What is the advantage of using k = 5 or k = 10 rather than
k = n? The most obvious advantage is computational. LOOCV requires
fitting the statistical learning method n times. This has the potential to be
computationally expensive (except for linear models fit by least squares,
in which case formula (5.2) can be used). But cross-validation is a very
general approach that can be applied to almost any statistical learning
method. Some statistical learning methods have computationally intensive
fitting procedures, and so performing LOOCV may pose computational
problems, especially if n is extremely large. In contrast, performing 10-fold
CV requires fitting the learning procedure only ten times, which may be
much more feasible. As we see in Section 5.1.4, there also can be other
non-computational advantages to performing 5-fold or 10-fold CV, which
involve the bias-variance trade-off.
The right-hand panel of Figure 5.4 displays nine different 10-fold CV
estimates for the Auto data set, each resulting from a different random split
of the observations into ten folds. As we can see from the figure, there is
some variability in the CV estimates as a result of the variability in how
the observations are divided into ten folds. But this variability is typically
much lower than the variability in the test error estimates that results from
the validation set approach (right-hand panel of Figure 5.2).
When we examine real data, we do not know the true test MSE, and
so it is difficult to determine the accuracy of the cross-validation estimate.
However, if we examine simulated data, then we can compute the true
test MSE, and can thereby evaluate the accuracy of our cross-validation
results. In Figure 5.6, we plot the cross-validation estimates and true test
error rates that result from applying smoothing splines to the simulated
data sets illustrated in Figures 2.9–2.11 of Chapter 2. The true test MSE
is displayed in blue. The black dashed and orange solid lines respectively
show the estimated LOOCV and 10-fold CV estimates. In all three plots,
the two cross-validation estimates are very similar. In the right-hand panel

5. Resampling Methods
20
15
10
5

Mean Squared Error

2.5
2.0
1.5

2

5

10

Flexibility

20

0

0.0

0.5

1.0

Mean Squared Error

2.0
1.5
1.0
0.0

0.5

Mean Squared Error

2.5

3.0

3.0

208

2

5

10

Flexibility

20

2

5

10

20

Flexibility

FIGURE 5.6. True and estimated test MSE for the simulated data sets in
Figures 2.9 ( left), 2.10 ( center), and 2.11 ( right). The true test MSE is shown
in blue, the LOOCV estimate is shown as a black dashed line, and the 10-fold
CV estimate is shown in orange. The crosses indicate the minimum of each of
the MSE curves.

of Figure 5.6, the true test MSE and the cross-validation curves are almost
identical. In the center panel of Figure 5.6, the two sets of curves are similar
at the lower degrees of flexibility, while the CV curves overestimate the test
set MSE for higher degrees of flexibility. In the left-hand panel of Figure 5.6,
the CV curves have the correct general shape, but they underestimate the
true test MSE.
When we perform cross-validation, our goal might be to determine how
well a given statistical learning procedure can be expected to perform on
independent data; in this case, the actual estimate of the test MSE is
of interest. But at other times we are interested only in the location of
the minimum point in the estimated test MSE curve. This is because we
might be performing cross-validation on a number of statistical learning
methods, or on a single method using different levels of flexibility, in order
to identify the method that results in the lowest test error. For this purpose,
the location of the minimum point in the estimated test MSE curve is
important, but the actual value of the estimated test MSE is not. We find
in Figure 5.6 that despite the fact that they sometimes underestimate the
true test MSE, all of the CV curves come close to identifying the correct
level of flexibility—that is, the flexibility level corresponding to the smallest
test MSE.

5.1.4

Bias-Variance Trade-Off for k-Fold Cross-Validation

We mentioned in Section 5.1.3 that k-fold CV with k < n has a computational advantage to LOOCV. But putting computational issues aside,
a less obvious but potentially more important advantage of k-fold CV is
that it often gives more accurate estimates of the test error rate than does
LOOCV. This has to do with a bias-variance trade-off.
It was mentioned in Section 5.1.1 that the validation set approach can
lead to overestimates of the test error rate, since in this approach the
training set used to fit the statistical learning method contains only half
the observations of the entire data set. Using this logic, it is not hard to see

5.1 Cross-Validation

209

that LOOCV will give approximately unbiased estimates of the test error,
since each training set contains n − 1 observations, which is almost as many
as the number of observations in th