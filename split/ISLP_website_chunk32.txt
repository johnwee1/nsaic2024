e full data set. And performing k-fold
CV for, say, k = 5 or k = 10 will lead to an intermediate level of bias,
since each training set contains approximately (k − 1)n/k observations—
fewer than in the LOOCV approach, but substantially more than in the
validation set approach. Therefore, from the perspective of bias reduction,
it is clear that LOOCV is to be preferred to k-fold CV.
However, we know that bias is not the only source for concern in an estimating procedure; we must also consider the procedure’s variance. It turns
out that LOOCV has higher variance than does k-fold CV with k < n. Why
is this the case? When we perform LOOCV, we are in effect averaging the
outputs of n fitted models, each of which is trained on an almost identical
set of observations; therefore, these outputs are highly (positively) correlated with each other. In contrast, when we perform k-fold CV with k < n,
we are averaging the outputs of k fitted models that are somewhat less
correlated with each other, since the overlap between the training sets in
each model is smaller. Since the mean of many highly correlated quantities
has higher variance than does the mean of many quantities that are not
as highly correlated, the test error estimate resulting from LOOCV tends
to have higher variance than does the test error estimate resulting from
k-fold CV.
To summarize, there is a bias-variance trade-off associated with the
choice of k in k-fold cross-validation. Typically, given these considerations,
one performs k-fold cross-validation using k = 5 or k = 10, as these values
have been shown empirically to yield test error rate estimates that suffer
neither from excessively high bias nor from very high variance.

5.1.5

Cross-Validation on Classification Problems

In this chapter so far, we have illustrated the use of cross-validation in the
regression setting where the outcome Y is quantitative, and so have used
MSE to quantify test error. But cross-validation can also be a very useful
approach in the classification setting when Y is qualitative. In this setting,
cross-validation works just as described earlier in this chapter, except that
rather than using MSE to quantify test error, we instead use the number
of misclassified observations. For instance, in the classification setting, the
LOOCV error rate takes the form
n

CV(n) =

10
Erri ,
n i=1

(5.4)

where Erri = I(yi =
% ŷi ). The k-fold CV error rate and validation set error
rates are defined analogously.
As an example, we fit various logistic regression models on the twodimensional classification data displayed in Figure 2.13. In the top-left
panel of Figure 5.7, the black solid line shows the estimated decision boundary resulting from fitting a standard logistic regression model to this data
set. Since this is simulated data, we can compute the true test error rate,
which takes a value of 0.201 and so is substantially larger than the Bayes

210

5. Resampling Methods
Degree=1

Degree=2

o o
o o oo o o
oo oo o o
o
oo oo ooo oo
o
oo
oo oo
oo o oooooo o
oo
o oo
oo
o
ooo o oo
o
o
o
o
o
ooo o
o
o o
o o
o
ooo
o
o
ooo oo
o o o o ooooo oo oo o oooo o
oo
o
o
o
o
o
o
o
o
ooo
o
o o
oo o oo o
oo o
o oo
oo
o ooo oo o o
o oooo o
o o
o
o oo o
o ooo
oo o
oo
oo
o
o
oooo oo
o
oo ooo
o
oo ooo
o o
ooo
o
o
o
oo o
o
o
o o

o o
o o oo o o
oo oo o o
o
oo oo ooo oo
o
oo
oo oo
oo o oooooo o
oo
o oo
oo
o
ooo o oo
o
o
o
o
o
ooo o
o
o o
o o
o
ooo
o
o
ooo oo
o o o o ooooo oo oo o oooo o
oo
o
o
o
o
o
o
o
o
ooo
o
o o
oo o oo o
oo o
o oo
oo
o ooo oo o o
o oooo o
o o
o
o oo o
o ooo
oo o
oo
oo
o
o
oooo oo
o
oo ooo
o
oo ooo
o o
ooo
o
o
o
oo o
o
o
o o

Degree=3

Degree=4

o o
o o oo o o
oo oo o o
o
oo oo ooo oo
o
oo
oo oo
oo o oooooo o
o oo
oo
o
oo oo o
o
o
o
o
o
oo
o
ooo o
o
o o
o o
o
ooo
o o
ooo oo
o
o
o
o
o
o
o
o o o o ooo oo
ooo
o
o
oo o ooooooo o o
o o o
oo o o o o o
oo o
o
o
o
o
o
o oo
o o o oo o oooo o
o
oo o
o
o ooo
oo ooo
oo
o
o oooo o
o
oo ooo
o
o
o
o
o o
o
o ooo
oo
o
o
oo o
o
o
o o

o o
o o oo o o
oo oo o o
o
oo oo ooo oo
o
oo
oo oo
oo o oooooo o
o oo
oo
o
oo oo o
o
o
o
o
o
oo
o
ooo o
o
o o
o o
o
ooo
o o
ooo oo
o
o
o
o
o
o
o
o o o o ooo oo
ooo
o
o
oo o ooooooo o o
o o o
oo o o o o o
oo o
o
o
o
o
o
o oo
o o o oo o oooo o
o
oo o
o
o ooo
oo ooo
oo
o
o oooo o
o
oo ooo
o
o
o
o
o o
o
o ooo
oo
o
o
oo o
o
o
o o

o

o

o

o

FIGURE 5.7. Logistic regression fits on the two-dimensional classification data
displayed in Figure 2.13. The Bayes decision boundary is represented using a
purple dashed line. Estimated decision boundaries from linear, quadratic, cubic
and quartic (degrees 1–4) logistic regressions are displayed in black. The test error
rates for the four logistic regression fits are respectively 0.201, 0.197, 0.160, and
0.162, while the Bayes error rate is 0.133.

error rate of 0.133. Clearly logistic regression does not have enough flexibility to model the Bayes decision boundary in this setting. We can easily
extend logistic regression to obtain a non-linear decision boundary by using
polynomial functions of the predictors, as we did in the regression setting in
Section 3.3.2. For example, we can fit a quadratic logistic regression model,
given by
*
+
p
log
= β0 + β1 X1 + β2 X12 + β3 X2 + β4 X22 .
(5.5)
1−p

The top-right panel of Figure 5.7 displays the resulting decision boundary,
which is now curved. However, the test error rate has improved only slightly,
to 0.197. A much larger improvement is apparent in the bottom-left panel

0.02

1.00

0.16

Error Rate

0.18

0.20

211

0.12

0.14

0.20
0.18
0.16
0.14
0.12

Error Rate

5.1 Cross-Validation

2

4

6

8

Order of Polynomials Used

10

0.01

0.05

0.10

0.20

0.50

1/K

FIGURE 5.8. Test error (brown), training error (blue), and 10-fold CV error
(black) on the two-dimensional classification data displayed in Figure 5.7. Left:
Logistic regression using polynomial functions of the predictors. The order of
the polynomials used is displayed on the x-axis. Right: The KNN classifier with
different values of K, the number of neighbors used in the KNN classifier.

of Figure 5.7, in which we have fit a logistic regression model involving
cubic polynomials of the predictors. Now the test error rate has decreased
to 0.160. Going to a quartic polynomial (bottom-right) slightly increases
the test error.
In practice, for real data, the Bayes decision boundary and the test error rates are unknown. So how might we decide between the four logistic
regression models displayed in Figure 5.7? We can use cross-validation in
order to make this decision. The left-hand panel of Figure 5.8 displays in
black the 10-fold CV error rates that result from fitting ten logistic regression models to the data, using polynomial functions of the predictors up
to tenth order. The true test errors are shown in brown, and the training
errors are shown in blue. As we have seen previously, the training error
tends to decrease as the flexibility of the fit increases. (The figure indicates
that though the training error rate doesn’t quite decrease monotonically,
it tends to decrease on the whole as the model complexity increases.) In
contrast, the test error displays a characteristic U-shape. The 10-fold CV
error rate provides a pretty good approximation to the test error rate.
While it somewhat underestimates the error rate, it reaches a minimum
when fourth-order polynomials are used, which is very close to the minimum of the test curve, which occurs when third-order polynomials are
used. In fact, using fourth-order polynomials would likely lead to good test
set performance, as the true test error rate is approximately the same for
third, fourth, fifth, and sixth-order polynomials.
The right-hand panel of Figure 5.8 displays the same three curves using the KNN approach for classification, as a function of the value of K
(which in this context indicates the number of neighbors used in the KNN
classifier, rather than the number of CV folds used). Again the training
error rate declines as the method becomes more flexible, and so we see that
the training error rate cannot be used to select the optimal value for K.
Though the cross-validation error curve slightly underestimates the test
error rate, it takes on a minimum very close to the best value for K.

212

5. Resampling Methods

5.2

The Bootstrap

The bootstrap is a widely applicable and extremely powerful statistical tool
bootstrap
that can be used to quantify the uncertainty associated with a given estimator or statistical learning method. As a simple example, the bootstrap
can be used to estimate the standard errors of the coefficients from a linear
regression fit. In the specific case of linear regression, this is not particularly
useful, since we saw in Chapter 3 that standard statistical software such as
R outputs such standard errors automatically. However, the power of the
bootstrap lies in the fact that it can be easily applied to a wide range of
statistical learning methods, including some for which a measure of variability is otherwise difficult to obtain and is not automatically output by
statistical software.
In this section we illustrate the bootstrap on a toy example in which we
wish to determine the best investment allocation under a simple model.
In Section 5.3 we explore the use of the bootstrap to assess the variability
associated with the regression coefficients in a linear model fit.
Suppose that we wish to invest a fixed sum of money in two financial
assets that yield returns of X and Y , respectively, where X and Y are
random quantities. We will invest a fraction α of our money in X, and will
invest the remaining 1 − α in Y . Since there is variability associated with
the returns on these two assets, we wish to choose α to minimize the total
risk, or variance, of our investment. In other words, we want to minimize
Var(αX + (1 − α)Y ). One can show that the value that minimizes the risk
is given by
σ 2 − σXY
α= 2 Y 2
,
(5.6)
σX + σY − 2σXY
2
where σX
= Var(X), σY2 = Var(Y ), and σXY = Cov(X, Y ).
2
In reality, the quantities σX
, σY2 , and σXY are unknown. We can compute
2
estimates for these quantities, σ̂X
, σ̂Y2 , and σ̂XY , using a data set that
contains past measurements for X and Y . We can then estimate the value
of α that minimizes the variance of our investment using

α̂ =

σ̂Y2 − σ̂XY
.
2
σ̂X + σ̂Y2 − 2σ̂XY

(5.7)

Figure 5.9 illustrates this approach for estimating α on a simulated data
set. In each panel, we simulated 100 pairs of returns for the investments
2
X and Y . We used these returns to estimate σX
, σY2 , and σXY , which we
then substituted into (5.7) in order to obtain estimates for α. The value of
α̂ resulting from each simulated data set ranges from 0.532 to 0.657.
It is natural to wish to quantify the accuracy of our estimate of α. To
estimate the standard deviation of α̂, we repeated the process of simulating 100 paired observations of X and Y , and estimating α using (5.7),
1,000 times. We thereby obtained 1,000 estimates for α, which we can call
α̂1 , α̂2 , . . . , α̂1,000 . The left-hand panel of Figure 5.10 displays a histogram
of the resulting estimates. For these simulations the parameters were set to
2
σX
= 1, σY2 = 1.25, and σXY = 0.5, and so we know that the true value of
α is 0.6. We indicated this value using a solid vertical line on the histogram.

Y

−1

0

1

2
1
0

Y

−1

−2

−2

−2

−1

0

1

2

−2

−1

0

1

2

X

−3

0
−3

−2

−2

−1

−1

Y

0

1

1

2

2

X

Y

213

2

5.2 The Bootstrap

−3

−2

−1

0

1

2

−2

−1

X

0

1

2

3

X

FIGURE 5.9. Each panel displays 100 simulated returns for investments
X and Y . From left to right and top to bottom, the resulting estimates for α
are 0.576, 0.532, 0.657, and 0.651.

The mean over all 1,000 estimates for α is
1000

ᾱ =

1 0
α̂r = 0.5996,
1000 r=1

very close to α = 0.6, and the standard deviation of the estimates is
:
;
1000
;
0
1
2
<
(α̂r − ᾱ) = 0.083.
1000 − 1 r=1

This gives us a very good idea of the accuracy of α̂: SE(α̂) ≈ 0.083. So
roughly speaking, for a random sample from the population, we would
expect α̂ to differ from α by approximately 0.08, on average.
In practice, however, the procedure for estimating SE(α̂) outlined above
cannot be applied, because for real data we cannot generate new samples
from the original population. However, the bootstrap approach allows us
to use a computer to emulate the process of obtaining new sample sets,
so that we can estimate the variability of α̂ without generating additional
samples. Rather than repeatedly obtaining independent data sets from the
population, we instead obtain distinct data sets by repeatedly sampling
observations from the original data set.
This approach is illustrated in Figure 5.11 on a simple data set, which
we call Z, that contains only n = 3 observations. We randomly select n
observations from the data set in order to produce a bootstrap data set,

5. Resampling Methods

0.4

0.5

0.6

0.7

α

0.8

0.9

0.8
0.7

α

0.6
0.3

0

0

0.4

50

50

0.5

100

100

150

150

200

200

0.9

214

0.3

0.4

0.5

0.6

0.7

0.8

0.9

True

Bootstrap

α

FIGURE 5.10. Left: A histogram of the estimates of α obtained by generating
1,000 simulated data sets from the true population. Center: A histogram of the
estimates of α obtained from 1,000 bootstrap samples from a single data set.
Right: The estimates of α displayed in the left and center panels are shown as
boxplots. In each panel, the pink line indicates the true value of α.

Z ∗1 . The sampling is performed with replacement, which means that the
with
same observation can occur more than once in the bootstrap data set. In replacement
∗1
this example, Z contains the third observation twice, the first observation
once, and no instances of the second observation. Note that if an observation
is contained in Z ∗1 , then both its X and Y values are included. We can use
Z ∗1 to produce a new bootstrap estimate for α, which we call α̂∗1 . This
procedure is repeated B times for some large value of B, in order to produce
B different bootstrap data sets, Z ∗1 , Z ∗2 , . . . , Z ∗B , and B corresponding α
estimates, α̂∗1 , α̂∗2 , . . . , α̂∗B . We can compute the standard error of these
bootstrap estimates using the formula
:
>
?2
;
B
B
; 1 0
0
1
!
<
SEB (α̂) =
α̂∗r −
α̂∗r
.
(5.8)
B − 1 r=1
B !
r =1

This serves as an estimate of the standard error of α̂ estimated from the
original data set.
The bootstrap approach is illustrated in the center panel of Figure 5.10,
which displays a histogram of 1,000 bootstrap estimates of α, each computed using a distinct bootstrap data set. This panel was constructed on
the basis of a single data set, and hence could be created using real data.
Note that the histogram looks very similar to the left-hand panel, which
displays the idealized histogram of the estimates of α obtained by generating 1,000 simulated data sets from the true population. In particular the
bootstrap estimate SE(α̂) from (5.8) is 0.087, very close to the estimate of
0.083 obtained using 1,000 simulated data sets. The right-hand panel displays the information in the center and left panels in a different way, via
boxplots of the estimates for α obtained by generating 1,000 simulated data
sets from the true population and using the bootstrap approach. Again, the
boxplots have similar spreads, indicating that the bootstrap approach can
be used to effectively estimate the variability associated with α̂.

5.3 Lab: Cross-Validation and the Bootstrap

Z *1
Obs

X

Y

1

4.3

2.4

2

2.1

1.1

3

5.3

2.8

Original Data (Z)

